

	/*glUseProgram(shadersRef->guiShaderProgram);
	for (auto element : guiRef->getElements()) {
		glBindVertexArray(guiRef->getVAO());

		glm::mat4 projectionMatrix = glm::mat4(1.0f);
		projectionMatrix = glm::ortho(0.0f, (float)width, (float)height, 0.0f, 0.0f, 0.1f);
		shadersRef->setUniformM4(glGetUniformLocation(shadersRef->guiShaderProgram, "projection"), projectionMatrix);

		glm::mat4 modelMatrix = glm::mat4(1.0f);
		modelMatrix = glm::translate(modelMatrix, glm::vec3(element->getX(), element->getY(), 0.0f));
		modelMatrix = glm::scale(modelMatrix, glm::vec3(element->getWidth(), element->getHeight(), 0.0f));

		shadersRef->setUniformM4(glGetUniformLocation(shadersRef->guiShaderProgram, "model"), modelMatrix);
		shadersRef->setUniform3f(glGetUniformLocation(shadersRef->guiShaderProgram, "color"), glm::vec3(1.0f, 0.0f, 0.0f));

		glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);
	}*/
}